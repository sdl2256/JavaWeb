<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <context:property-placeholder location="classpath:jpadb.properties"/>

    <!-- 数据源配置 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!-- 驱动名称 -->
        <property name="DriverClassName" value="${jdbc.driverClass}"/>
        <!-- JDBC连接串 -->
        <property name="url" value="${jdbc.url}"/>
        <!-- 数据库用户名称 -->
        <property name="username" value="${jdbc.userName}"/>
        <!-- 数据库密码 -->
        <property name="password" value="${jdbc.password}"/>
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <!-- 初始化大小 -->
        <property name="initialSize" value="${jdbc.initialSize}"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${jdbc.maxWait}"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${jdbc.minIdle}"/>
        <!-- 逐出连接的检测时间间隔 -->
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>
        <!-- 最小逐出时间 -->
        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
        <!-- 测试有效用的SQL Query -->
        <property name="validationQuery" value="${jdbc.validationQuery}"/>
        <!-- 连接空闲时测试是否有效 -->
        <property name="testWhileIdle" value="${jdbc.testWhileTdle}"/>
        <!-- 获取连接时测试是否有效 -->
        <property name="testOnBorrow" value="${jdbc.testOnBorrow}"/>
        <!-- 归还连接时是否测试有效 -->
        <property name="testOnReturn" value="${jdbc.testOnReturn}"/>
    </bean>


    <!--注入jdbctemplate，用其进行数据库操作 -->
    <!--
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
    </bean>
    -->

</beans>